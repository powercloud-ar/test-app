name: Build, Push Docker Image, Deploy and Stress Test
on:
  push:
    branches:
      - main
permissions:
  contents: write
  
jobs:
  # ==============================
  # 1. Build y Push de Docker
  # ==============================
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DYNATRACE_TOKEN: ${{ secrets.DYNA_TOKEN }}
      DYNATRACE_TENANT: ${{ secrets.DYNA_TENANT }}
    outputs:
      build-version: ${{ steps.version.outputs.build_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Generate build version
        id: version
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          BUILD_VERSION=1.0.$COMMIT_COUNT
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "::set-output name=build_version::$BUILD_VERSION"
          echo "Build version: $BUILD_VERSION"
          
      - name: Notify Deploy
        if: success()
        run: |
          curl -X POST "https://$DYNATRACE_TENANT.live.dynatrace.com/platform/ingest/v1/events.sdlc" \
            -H "Authorization: Api-Token $DYNATRACE_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "source": "GitHub Actions",
              "event.type": "build",
              "event.provider": "github",
              "event.status": "started",
              "task.name": "GitHub Workflow",
              "task.outcome": "running",
              "execution_context": {
                "commit": "${{ github.sha }}",
                "repository": "https://github.com/${{ github.repository }}"
                }
            }'

      - name: Notify error
        if: failure()    
        run: |
            curl -X POST "https://$DYNATRACE_TENANT.live.dynatrace.com/platform/ingest/v1/events.sdlc" \
              -H "Authorization: Api-Token $DYNATRACE_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                  "source": "GitHub Actions",
                  "event.type": "build",
                  "event.provider": "github",
                  "event.status": "finished",
                  "task.name": "GitHub Workflow",
                  "task.outcome": "error",
                  "execution_context": {
                    "commit": "${{ github.sha }}",
                    "repository": "https://github.com/${{ github.repository }}"
                    }
                  }'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/package-lock.json

      - name: Install dependencies
        working-directory: ./src
        run: npm install

      - name: Build project
        working-directory: ./src
        run: npm run build --if-present
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_USERNAME }}/mi-app-node:${{ env.BUILD_VERSION }}   
            ${{ secrets.DOCKERHUB_USERNAME }}/mi-app-node:latest
  # ==============================
  # 2Ô∏è. Stress Test Pre-Deploy
  # ==============================
  stress-test-pre:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run stress test (Pre-Deploy)
        run: |
          docker run --rm -i loadimpact/k6 run - < ./stress-tests/test-script.js \
            --env TARGET_URL=https://tienda.rocketcloud.io/

      - name: Notify error
        if: failure()    
        run: |
            curl -X POST "https://$DYNATRACE_TENANT.live.dynatrace.com/platform/ingest/v1/events.sdlc" \
              -H "Authorization: Api-Token $DYNATRACE_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                  "source": "GitHub Actions",
                  "event.type": "build",
                  "event.provider": "github",
                  "event.status": "finished",
                  "task.name": "GitHub Workflow",
                  "task.outcome": "error",
                  "execution_context": {
                    "commit": "${{ github.sha }}",
                    "repository": "https://github.com/${{ github.repository }}"
                }
              }'

  # ==============================
  # 3. Update yaml
  # ==============================
  update-yaml:
    runs-on: ubuntu-latest
    needs: [build-and-push, stress-test-pre]
    env:
      BUILD_VERSION: ${{ needs.build-and-push.outputs.build-version }}
      DYNATRACE_TOKEN: ${{ secrets.DYNA_TOKEN }}
      DYNATRACE_TENANT: ${{ secrets.DYNA_TENANT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update deploy.yaml
        env:
          TARGET_REPO: powercloud-ar/test-app-yaml
          DEPLOY_FILE: deploy.yaml
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mi-app-node:latest
          BUILD_VERSION: ${{ env.BUILD_VERSION }}
          GH_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }} 
        run: |
          # Clonar Repo
          git clone https://github.com/$TARGET_REPO.git
          cd $(basename "$TARGET_REPO")

          NEW_REMOTE_URL="https://powercloud-ar:${GH_TOKEN}@github.com/${TARGET_REPO}.git"
          git remote set-url origin $NEW_REMOTE_URL

          # Modificar Deploy YAML
          sed -i "s|image: .*|image: ${IMAGE_NAME}|g" $DEPLOY_FILE
          sed -i "s|buildVersion: .*|buildVersion: ${BUILD_VERSION}|g" $DEPLOY_FILE
      
          # Commit y push
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
         
          git add $DEPLOY_FILE
          git commit -m "Update buildVersion to ${BUILD_VERSION} and Docker image" || echo "No changes to commit"
          git push
          
      - name: Notify error
        if: failure()    
        run: |
            curl -X POST "https://$DYNATRACE_TENANT.live.dynatrace.com/platform/ingest/v1/events.sdlc" \
              -H "Authorization: Api-Token $DYNATRACE_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                  "source": "GitHub Actions",
                  "event.type": "build",
                  "event.provider": "github",
                  "event.status": "finished",
                  "task.name": "GitHub Workflow",
                  "task.outcome": "error",
                  "execution_context": {
                    "commit": "${{ github.sha }}",
                    "repository": "https://github.com/${{ github.repository }}"
                    }
                  }'

  # ==============================
  # 4. Notificacion a Dynatrace
  # ==============================
  notify:
    runs-on: ubuntu-latest
    needs: [update-yaml]
    if: success()
    env:
      BUILD_VERSION: ${{ needs.build-and-push.outputs.build-version }}
      DYNATRACE_TOKEN: ${{ secrets.DYNA_TOKEN }}
      DYNATRACE_TENANT: ${{ secrets.DYNA_TENANT }}
    steps:
      - name: Notify success
        run: |
            curl -X POST "https://$DYNATRACE_TENANT.live.dynatrace.com/platform/ingest/v1/events.sdlc" \
              -H "Authorization: Api-Token $DYNATRACE_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                  "source": "GitHub Actions",
                  "event.type": "build",
                  "event.provider": "github",
                  "event.status": "finished",
                  "task.name": "GitHub Workflow",
                  "task.outcome": "success",
                  "execution_context": {
                    "commit": "${{ github.sha }}",
                    "repository": "https://github.com/${{ github.repository }}"
                  }
              }'
          
      
